//import quarter sections
var qrts = ee.FeatureCollection("users/ptsorens/SK_QRTS_South_4326");

// Get average values per polygon

// Filter an image collection by date and region to make a
// median pixel composite.
//
// See also: ClippedComposite, which crops the output image
// instead of filtering the input collection.

// Filter to only include images within a defined area.
var polygon = ee.Geometry.Polygon({
  coords: [[[-110.00, 49.00], [-110.00, 55.00], [-101.00, 55.00], [-101.00, 49.00]
  ]],
  geodesic: false
});

//Cloud Mask
/**
 * Function to mask clouds based on the pixel_qa band of Landsat SR data.
 * @param {ee.Image} image Input Landsat SR image
 * @return {ee.Image} Cloudmasked Landsat image
 */
var cloudMaskL457 = function(image) {
  var qa = image.select('QA_PIXEL');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};

// Create a Landsat 7 composites filter by
// the bounds of the FeatureCollection.

var collection = 
    ee.ImageCollection('LANDSAT/LE07/C02/T1_L2')
    .filter(ee.Filter.calendarRange(1999,2021,'year'))
    .filter(ee.Filter.calendarRange(8,8,'month'))
    .filterBounds(polygon)
    .map(cloudMaskL457);



// Function to calculate and add an NDVI band
var addNDVI = function(image) {
return image.addBands(image.normalizedDifference(['SR_B4', 'SR_B3']));
};

var collection = collection.map(addNDVI);

var NDVI = collection.select(['nd']);
var NDVImed = NDVI.median(); 

print(NDVImed);

//mask by crop area
var cropmask = ee.Image("projects/just-amp-296821/assets/AAFC_cropMask/AAFC_croplandMask");

var NDVImed = NDVImed.mask(cropmask);

// Create palettes for display of NDVI
var ndvi_pal = ['#d73027', '#f46d43', '#fdae61', '#fee08b', '#d9ef8b',
'#a6d96a'];

// Display NDVI results on map
Map.addLayer(NDVImed.clip(polygon), {min: -0.5, max:0.5, palette: ndvi_pal}, 'NDVI');


//average by quarter section
//average by quarter section
var reducer = ee.Reducer.mean().combine({
  reducer2: ee.Reducer.stdDev(),
  sharedInputs: true
});

var medians = NDVImed.reduceRegions({
  collection: qrts,
  reducer: reducer,
  scale:30,
  tileScale: 4,
  });


//export table
// the resulting mean is a FeatureCollection
// so you can export it as a table
Export.table.toDrive({
    collection: medians, 
    description: 'ndvi_med_june_1999_2021', 
    folder: 'yield_mapping', 
    fileNamePrefix: 'ndvi_med_june_1999_2021', 
    fileFormat: 'CSV'
});
