//import quarter sections
var qrts = ee.FeatureCollection("users/ptsorens/SK_QRTS_South_4326");

// Get average values per polygon

// Filter an image collection by date and region to make a
// median pixel composite.
//
// See also: ClippedComposite, which crops the output image
// instead of filtering the input collection.

// Filter to only include images within a defined area.
var polygon = ee.Geometry.Polygon({
  coords: [[[-110.00, 49.00], [-110.00, 55.00], [-101.00, 55.00], [-101.00, 49.00]
  ]],
  geodesic: false
});

var polygon_sub = ee.Geometry.Polygon({
  coords: [[[-108.00, 51.00], [-108.00, 52.00], [-107.00, 52.00], [-107.00, 51.00]
  ]],
  geodesic: false
});

var qrts=qrts.filterBounds(polygon_sub);

//Cloud Mask
/**
 * Function to mask clouds based on the pixel_qa band of Landsat SR data.
 * @param {ee.Image} image Input Landsat SR image
 * @return {ee.Image} Cloudmasked Landsat image
 */
// Create a Landsat 7 composites filter by
// the bounds of the FeatureCollection.
var cropmask = ee.Image("projects/just-amp-296821/assets/AAFC_cropMask/AAFC_croplandMask");

var crop_masking = function(image){
  return image.updateMask(cropmask);
};

// Daily mean 2m air temperature
var era5_2mt = ee.ImageCollection('ECMWF/ERA5/DAILY')
                   .select('mean_2m_air_temperature')
                   .filter(ee.Filter.calendarRange(2000,2000,'year'))
                   .filterBounds(polygon)
                   ;
                   
// Daily total precipitation sums
var era5_tp = ee.ImageCollection('ECMWF/ERA5/DAILY')
                  .select('total_precipitation')
                   .filter(ee.Filter.calendarRange(2000,2000,'year'))
                   .filterBounds(polygon)
                   ;


//time periods
var interval = 1;
var increment = 'month';
var start = '2000-01-01';

// make a list of start years
var startDate = ee.Date(start);
var secondDate = startDate.advance(interval, increment).millis();
var increase = secondDate.subtract(startDate.millis());
var list = ee.List.sequence(startDate.millis(), ee.Date('2000-12-31').millis(), increase);

print(list);

// make a composite (mean temp) of the images monthly
var temps = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = era5_2mt.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  // add the median to every image
  var meanImage = filtCol.median();
  var meanImage_bicubic = meanImage.resample('bicubic').reproject({crs:"EPSG:26913", scale:100});
  return ee.Image(meanImage_bicubic).set('system:time_start', ee.Date(startYear).millis());
}));

print(temps);

//make a composite of total precip
var precip = ee.ImageCollection.fromImages(list.map(function(startYear){
  var filtCol = era5_tp.filterDate(ee.Date(startYear), ee.Date(startYear).advance(interval, increment));
  // add the median to every image
  var meanImage = filtCol.sum();
  var meanImage_bicubic = meanImage.resample('bicubic').reproject({crs:"EPSG:26913", scale:100});
  return ee.Image(meanImage_bicubic).set('system:time_start', ee.Date(startYear).millis());
}));

print(temps);

//reducer
var reducer = ee.Reducer.median();

//reducer
var temp_reduced = temps.map(function(image){
  return image.reduceRegions({
    collection: qrts,
    reducer: reducer,
    scale:30,
    tileScale: 4,
  }); 
}).flatten();

var precip_reduced = precip.map(function(image){
  return image.reduceRegions({
    collection: qrts,
    reducer: reducer,
    scale:30,
    tileScale: 4,
  }); 
}).flatten();

//drop .geo
var drop_feature = function(feature){
  return feature.setGeometry(null);
};

var temp_reduced = temp_reduced.map(drop_feature);
var precip_reduced = precip_reduced.map(drop_feature);

//export table
// so you can export it as a table
Export.table.toDrive({
    collection: temp_reduced.select(['system:index', 'LEGALLAND', 'median']), 
    description: 'temp_med_monthly_2000', 
    folder: 'yield_mapping', 
    fileNamePrefix: 'temp_med_monthly_2000', 
    fileFormat: 'CSV'
});


Export.table.toDrive({
    collection: precip_reduced.select(['system:index', 'LEGALLAND', 'median']), 
    description: 'precip_med_monthly_2000', 
    folder: 'yield_mapping', 
    fileNamePrefix: 'precip_med_monthly_2000', 
    fileFormat: 'CSV'
});
